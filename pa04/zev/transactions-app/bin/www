#!/usr/bin/env node // <- use node.js

var app = require("../app"); // importing app
var debug = require("debug")("transactions-app:server");
var http = require("http");

// get and store the port
var port = normalizePort(process.env.PORT || "3000"); // default to port 3000
app.set("port", port);

// create http server
var server = http.createServer(app);

// listen to the port
server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

// normalize port into valid number or string
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // if it's a named pipe
    return val;
  }

  if (port >= 0) {
    // if it's a number
    return port;
  }

  return false; // if it's not a valid port, return false
}

// error listener
function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  // handle listen errors
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// event listener for "listening" event
function onListening() {
  var addr = server.address();
  var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr;
  debug("Listening on " + bind);
}
